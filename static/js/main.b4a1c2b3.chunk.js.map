{"version":3,"sources":["ImageGalleryItem/ImageGalleryItem.module.css","Modal/Modal.module.css","ImageGallery/ImageGallery.module.css","Loader/Loader.module.css","services/images-api.js","Button/Button.js","Searchbar/Searchbar.js","ImageGalleryItem/ImageGalleryItem.js","ImageGallery/ImageGallery.js","Modal/Modal.js","Loader/Loader.js","App.js","index.js","Searchbar/Searchbar.module.css"],"names":["module","exports","api","fetchImages","searchQuery","currentPage","axios","get","then","response","data","Button","children","onSubmit","allyProps","type","defaultProps","onClick","Searchbar","useState","setSearchQuery","className","s","event","preventDefault","trim","toast","error","SearchForm","SearchFormButton","SearchFormInput","name","onChange","currentTarget","value","toLowerCase","autoComplete","autoFocus","placeholder","ImageGalleryItem","id","webformatURL","tags","largeImageURL","src","alt","ImageGalleryItemImage","ImageGallery","images","map","image","modalRoot","document","querySelector","Modal","onClose","useEffect","window","addEventListener","handleKeyDown","removeEventListener","e","code","createPortal","Overlay","target","tag","width","height","Spinner","color","timeout","spinnerStyle","App","setImages","setCurrentPage","isLoading","setIsLoading","showModal","setShowModal","setError","setImageURL","imagesAPI","hits","length","prevImages","setTimeout","scrollBy","top","documentElement","clientHeight","behavior","catch","finally","toggleModal","dataset","source","autoClose","prevCurrentPage","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b4a1c2b3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__34aQC\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__2a0Ao\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__2u4R5\",\"Modal\":\"Modal_Modal__37qca\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__8VYyg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinnerStyle\":\"Loader_spinnerStyle__w_Ocu\"};","import axios from 'axios';\n\nconst API_KEY = '21824394-3f4c7e3f700c9b67b092e1424';\nconst BASE_URL = 'https://pixabay.com/api';\nconst PER_PAGE = 12;\n\nfunction fetchImages({ searchQuery, currentPage }) {\n  return axios\n    .get(\n      `${BASE_URL}/?key=${API_KEY}&q=${searchQuery}&page=${currentPage}&image_type=photo&orientation=horizontal&per_page=${PER_PAGE}`,\n    )\n    .then(response => {\n      return response.data;\n    });\n}\n\nconst api = {\n  fetchImages,\n};\n\nexport default api;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Button = ({ children, onSubmit, ...allyProps }) => (\n  <button onSubmit={onSubmit} type=\"submit\" {...allyProps}>\n    {children}\n  </button>\n);\n\nButton.defaultProps = {\n  onClick: () => null,\n  children: null,\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func,\n  children: PropTypes.node,\n  'aria-label': PropTypes.string,\n};\n\nexport default Button;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Button from '../Button';\nimport s from './Searchbar.module.css';\n\nexport default function Searchbar({ onSubmit }) {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleNameImageChange = event => {\n    setSearchQuery(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (searchQuery.trim() === '') {\n      toast.error('Введите ваш запрос');\n      return;\n    }\n    onSubmit(searchQuery);\n  };\n\n  return (\n    <header className={s.Searchbar}>\n      <form onSubmit={handleSubmit} className={s.SearchForm}>\n        <Button className={s.SearchFormButton} />\n        <input\n          className={s.SearchFormInput}\n          name=\"searchQuery\"\n          onChange={handleNameImageChange}\n          value={searchQuery}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\n// class Searchbar extends Component {\n//   static propTypes = {\n//     onSubmit: PropTypes.func.isRequired,\n//   };\n\n//   state = {\n//     searchQuery: '',\n//   };\n\n//   handleNameImageChange = e => {\n//     this.setState({ searchQuery: e.currentTarget.value.toLowerCase() });\n//   };\n\n//   handleSubmit = e => {\n//     const { searchQuery } = this.state;\n//     e.preventDefault();\n\n//     if (searchQuery.trim() === '') {\n//       toast.error('Enter your request');\n//       return;\n//     }\n//     this.props.onSubmit(searchQuery);\n//   };\n\n//   render() {\n//     const { searchQuery } = this.state;\n//     return (\n//       <header className={s.Searchbar}>\n//         <form onSubmit={this.handleSubmit} className={s.SearchForm}>\n//           <Button className={s.SearchFormButton} />\n//           <input\n//             className={s.SearchFormInput}\n//             name=\"searchQuery\"\n//             onChange={this.handleNameImageChange}\n//             value={searchQuery}\n//             type=\"text\"\n//             autoComplete=\"off\"\n//             autoFocus\n//             placeholder=\"Search images and photos\"\n//           />\n//         </form>\n//       </header>\n//     );\n//   }\n// }\n\n// export default Searchbar;\n","import PropTypes from 'prop-types';\nimport s from './ImageGalleryItem.module.css';\n\nconst ImageGalleryItem = ({\n  id,\n  webformatURL,\n  tags,\n  onClick,\n  largeImageURL,\n}) => (\n  <li onClick={onClick} key={id} className={s.ImageGalleryItem}>\n    <img\n      src={webformatURL}\n      alt={tags}\n      className={s.ImageGalleryItemImage}\n      data-source={largeImageURL}\n    />\n  </li>\n);\n\nImageGalleryItem.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import PropTypes from 'prop-types';\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport s from './ImageGallery.module.css';\n\nconst ImageGallery = ({ images, onClick }) => {\n  return (\n    <ul className={s.ImageGallery}>\n      {images.map(image => (\n        <ImageGalleryItem\n          onClick={onClick}\n          key={image.id}\n          webformatURL={image.webformatURL}\n          tags={image.tags}\n          largeImageURL={image.largeImageURL}\n        />\n      ))}\n    </ul>\n  );\n};\n\nImageGallery.propTypes = {\n  onClick: PropTypes.func,\n  images: PropTypes.array.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n};\n\nexport default ImageGallery;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { createPortal } from 'react-dom';\nimport s from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Modal({ onClose, largeImageURL, images }) {\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n\n  const handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  const handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <div className={s.Overlay} onClick={handleBackdropClick}>\n      <div className={s.Modal}>\n        <img src={largeImageURL} alt={images.tag} width=\"800\" height=\"600\" />\n      </div>\n    </div>,\n    modalRoot,\n  );\n}\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n};\n\n// class Modal extends Component {\n//   static propTypes = {\n//     onClose: PropTypes.func.isRequired,\n//   };\n\n//   componentDidMount() {\n//     window.addEventListener('keydown', this.handleKeyDown);\n//   }\n\n//   componentWillUnmount() {\n//     window.removeEventListener('keydown', this.handleKeyDown);\n//   }\n\n//   handleKeyDown = e => {\n//     if (e.code === 'Escape') {\n//       this.props.onClose();\n//     }\n//   };\n\n//   handleBackdropClick = e => {\n//     if (e.currentTarget === e.target) {\n//       this.props.onClose();\n//     }\n//   };\n\n//   render() {\n//     const { largeImageURL, images } = this.props;\n\n//     return createPortal(\n//       <div className={s.Overlay} onClick={this.handleBackdropClick}>\n//         <div className={s.Modal}>\n//           <img src={largeImageURL} alt={images.tag} width=\"800\" height=\"600\" />\n//         </div>\n//       </div>,\n\n//       modalRoot,\n//     );\n//   }\n// }\n\n// export default Modal;\n","import Loader from 'react-loader-spinner';\nimport s from './Loader.module.css';\n\nconst Spinner = () => (\n  <Loader\n    type=\"Puff\"\n    color=\"#00BFFF\"\n    height={100}\n    width={100}\n    timeout={3000}\n    className={s.spinnerStyle}\n  />\n);\n\nexport default Spinner;\n","import React, { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\nimport imagesAPI from './services/images-api';\nimport Searchbar from './Searchbar';\nimport ImageGallery from './ImageGallery';\nimport Modal from './Modal';\nimport Button from './Button';\nimport Spinner from './Loader';\n\nexport default function App() {\n  const [images, setImages] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [error, setError] = useState(null);\n  const [largeImageURL, setImageURL] = useState('');\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n\n    const fetchImages = () => {\n      setIsLoading(true);\n\n      imagesAPI\n        .fetchImages({\n          searchQuery,\n          currentPage,\n        })\n        .then(images => {\n          if (!images.hits.length) {\n            toast.error('Не верный запрос');\n            return;\n          }\n\n          setImages(prevImages => [...prevImages, ...images.hits]);\n\n          if (currentPage > 1) {\n            setTimeout(() => {\n              window.scrollBy({\n                top: document.documentElement.clientHeight - 120,\n                behavior: 'smooth',\n              });\n            }, 600);\n          }\n        })\n        .catch(setError(error))\n        .finally(() => setIsLoading(false));\n    };\n\n    fetchImages();\n  }, [currentPage, error, searchQuery]);\n\n  const handleSubmit = searchQuery => {\n    setSearchQuery(searchQuery);\n    setCurrentPage(1);\n    setImages([]);\n  };\n\n  const toggleModal = event => {\n    if (!showModal) {\n      setImageURL(event.target.dataset.source);\n    }\n\n    if (showModal) {\n      setImageURL('');\n    }\n\n    setShowModal(!showModal);\n  };\n\n  const onClickBtn = () => {\n    setCurrentPage(prevCurrentPage => prevCurrentPage + 1);\n  };\n\n  return (\n    <>\n      {isLoading && <Spinner />}\n      {showModal && <Spinner />}\n      <Searchbar onSubmit={handleSubmit} />\n      <ToastContainer autoClose={3000} />\n      <ImageGallery\n        images={images}\n        onClick={toggleModal}\n        largeImageURL={largeImageURL}\n      />\n      {images.length > 0 && (\n        <Button\n          className=\"ButtonLoad\"\n          onClick={onClickBtn}\n          aria-label=\"Загрузить еще\"\n        >\n          <span className=\"label\">Load more</span>\n        </Button>\n      )}\n      {showModal && (\n        <Modal\n          onClose={toggleModal}\n          largeImageURL={largeImageURL}\n          tag={images.tag}\n          images={images}\n        />\n      )}\n    </>\n  );\n}\n\n// class App extends Component {\n//   state = {\n//     images: [],\n//     searchQuery: '',\n//     currentPage: 1,\n//     isLoading: false,\n//     showModal: false,\n//     error: null,\n//     largeImageURL: '',\n//   };\n\n//   componentDidUpdate(prevProps, prevState) {\n//     if (prevState.searchQuery !== this.state.searchQuery) {\n//       this.fetchImages();\n//     }\n//   }\n\n//   fetchImages = () => {\n//     const { searchQuery, currentPage } = this.state;\n\n//     this.setState({ isLoading: true });\n\n//     imagesAPI\n//       .fetchImages({\n//         searchQuery,\n//         currentPage,\n//       })\n//       .then(images => {\n//         if (!images.hits.length) {\n//           toast.error('Не верный запрос');\n//           return;\n//         }\n\n//         this.setState(prevState => ({\n//           images: [...prevState.images, ...images.hits],\n//           currentPage: prevState.currentPage + 1,\n//         }));\n\n//         if (this.state.currentPage > 2) {\n//           setTimeout(() => {\n//             window.scrollBy({\n//               top: document.documentElement.clientHeight - 120,\n//               behavior: 'smooth',\n//             });\n//           }, 600);\n//         }\n//       })\n//       .catch(error => this.setState({ error }))\n//       .finally(() => this.setState({ isLoading: false }));\n//   };\n\n//   handleSubmit = searchQuery => {\n//     this.setState({ searchQuery, currentPage: 1, images: [] });\n//   };\n\n//   toggleModal = e => {\n//     const { showModal } = this.state;\n\n//     if (!showModal) {\n//       this.setState({ largeImageURL: e.target.dataset.source });\n//     }\n\n//     if (showModal) {\n//       this.setState({ largeImageURL: '' });\n//     }\n\n//     this.setState(({ showModal }) => ({\n//       showModal: !showModal,\n//     }));\n//   };\n\n//   render() {\n//     const { isLoading, images, largeImageURL, showModal } = this.state;\n\n//     return (\n//       <>\n//         <Searchbar onSubmit={this.handleSubmit} />\n//         <ToastContainer autoClose={3000} />\n//         {isLoading && <Spinner />}\n\n//         <ImageGallery\n//           images={images}\n//           onClick={this.toggleModal}\n//           largeImageURL={largeImageURL}\n//         />\n\n//         {images.length > 0 && (\n//           <Button\n//             className=\"ButtonLoad\"\n//             onClick={this.fetchImages}\n//             aria-label=\"Загрузить еще\"\n//           >\n//             <span className=\"label\">Load more</span>\n//           </Button>\n//         )}\n\n//         {showModal && (\n//           <Modal\n//             onClose={this.toggleModal}\n//             largeImageURL={largeImageURL}\n//             tag={images.tag}\n//             images={images}\n//           />\n//         )}\n//       </>\n//     );\n//   }\n// }\n\n// export default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__2uoqi\",\"SearchForm\":\"Searchbar_SearchForm__1X_9C\",\"SearchFormButton\":\"Searchbar_SearchFormButton__2gag1\",\"SearchFormButton-label\":\"Searchbar_SearchFormButton-label__3Zgyg\",\"SearchFormInput\":\"Searchbar_SearchFormInput__3l_eE\"};"],"sourceRoot":""}